// @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700;800&display=swap');

@import './theme/colors.scss';
@import './theme/mixins.scss';
@import './theme/buttons.scss';
@import './theme/inputs.scss';

* {
    margin: 0;
    padding: 0;
}

body {
    background-color: $primary-white;
    color: $primary-black;
    font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
    // overflow-x: hidden;

    &::-webkit-scrollbar { 
        display: none;
    }
}

::selection {
    color: $primary-white;
    background-color: $primary-color;
}

.primary-color {
    color: $primary-color !important;
}

.container {
    height: 100%;
}

.d-none {
    display: none !important;
}

.height-auto-mobile {
    @media only screen and (min-device-width: 320px) and (max-device-width: 479px) and (orientation: portrait) {
        height: auto !important;
        min-height: auto !important;
    }
}

// app logo
.app-logo {
    @include d-flex(row, center, center);
    font-weight: bold;
    font-size: 2.6vh;
    cursor: pointer;

    span {
        color: $primary-color;
        margin-right: .5vh;
    }

    img {
        width: 3.6vh;
        margin-right: .5rem;
    }
}

// section titles and sub-titles
.section-title {
    font-weight: 500;
    font-size: 4.5vw;

    @media only screen and (max-width: 599.98px) and (orientation: portrait) {
        font-size: 9vw;
        margin-bottom: 1rem;
    }
}

.section-subtitle {
    font-size: 1.2vw;
    font-weight: 500;
    margin-top: 1.8vw;
    line-height: 1.4rem;

    @media only screen and (max-width: 599.98px) and (orientation: portrait) {
        font-size: 3.5vw;

        br {
            display: none;
        }
    }
}

// Intersection observer animations
@mixin animate_smoothening() {
    transition-property: transform, opacity !important;
    transition-duration: 1s !important;
    transition-timing-function: ease-out !important;
}

.animate-object {
    transform: translate3d(0, 0, 0);
    opacity: 1;

    @include animate_smoothening();
}

.normalize-moveUp-object {
    transform: translateY(2rem);
    opacity: 0;

    @include animate_smoothening();
}

.normalize-rightIn-object {
    transform: translateX(-100%);
    opacity: 0;

    @include animate_smoothening();
}